---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Loan.
--- DateTime: 24/06/2018 17:52
---
local MameCst = require("mameLuaConstants")
require("class")
require("creature")

Generation = class(function (this, size, map, inputsManager)
    this.generationNumber = 1
    this.creatures = {}
    this.size = size
    this.creaturesSortedByFitness = {}

    for i = 1, size do
        local randomCreature = Creature(map, inputsManager, {}, MameCst.screen, MameCst.ioP1, 160, 4)
        table.insert(this.creatures, randomCreature)
    end

    this.currentCreatureCounter = 0
end)

function Generation:randomizeAll()
    for i = 1, self.size do
        self.creatures[i]:randomize(i)
    end
end

function Generation:getNextCreature()
    self.currentCreatureCounter = self.currentCreatureCounter + 1
    return self.creatures[self.currentCreatureCounter]
end

function Generation:lastCreatureDie()
    return self.currentCreatureCounter == self.size
end

function Generation:reGenerate()
    -- TODO Add/modify creatures

    self.currentCreatureCounter = 0
    self.generationNumber = self.generationNumber + 1
end

function Generation:creatureIsDead()
    local creature = self.creatures[self.currentCreatureCounter]
    local creatureFitness = creature:getFitness()

    -- TODO : update a sorted (by fitness) list



    if (self:lastCreatureDie()) then
        self:reGenerate()
    end
end

function Generation:draw()
    local s = MameCst.screen
    local textX = 160
    local textY = 12
    local text = "Generation : " .. self.generationNumber .. " \tSpecies : " .. self.currentCreatureCounter
    s:draw_text(textX+0.5, textY, text, 0xff000000)
    s:draw_text(textX, textY, text, 0xffffffff)

end

function Generation:__tostring()
    local ret = ""
    ret = ret .. "Generation " .. self.generationNumber
    for i, v in pairs(self.creatures) do
        ret = ret .. i .. " : " .. tostring(v) .. "\n"
    end
    return ret
end
